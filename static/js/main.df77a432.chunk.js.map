{"version":3,"sources":["components/layout/Navbar.module.scss","pages/Home.module.scss","pages/Add.module.scss","logo.png","components/layout/Navbar.tsx","pages/Add.tsx","pages/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","pathname","useLocation","className","styles","navbar","to","brand","active","separator","href","target","rel","right","add","data","invite_link","home","logoContainer","src","logo","buttons","App","Navbar","exact","path","component","Home","Add","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,OAAS,uBAAuB,UAAY,0BAA0B,MAAQ,wB,oBCA9JD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,cAAgB,4BAA4B,KAAO,mBAAmB,gBAAgB,4BAA4B,QAAU,wB,uBCAxKD,EAAOC,QAAU,CAAC,IAAM,mB,4KCDxBD,EAAOC,QAAU,IAA0B,kC,gOCK5B,aACX,IAAMC,EAAWC,cAAcD,SAE/B,OACI,yBAAKE,UAAWC,IAAOC,QACnB,kBAAC,IAAD,CACIC,GAAG,IACHH,UACIC,IAAOG,MAAQ,KAAoB,MAAbN,EAAmBG,IAAOI,OAAS,KAHjE,QAQA,kBAAC,IAAD,CACIF,GAAG,YACHH,UAAwB,cAAbF,EAA2BG,IAAOI,OAAS,IAF1D,YAMA,kBAAC,IAAD,CACIF,GAAG,OACHH,UAAwB,SAAbF,EAAsBG,IAAOI,OAAS,IAFrD,YAOA,yBAAKL,UAAWC,IAAOK,YAEvB,uBACIC,KAAK,6BACLC,OAAO,SACPC,IAAI,sBACJT,UAAWC,IAAOS,OAJtB,aAQA,uBACIH,KAAK,iCACLC,OAAO,SACPC,IAAI,mBACJT,UAAWC,IAAOS,OAJtB,UAQA,uBACIH,KAAK,qCACLC,OAAO,SACPC,IAAI,sBACJT,UAAWC,IAAOS,OAJtB,Y,yBC7CG,aACX,OACI,yBAAKV,UAAWC,IAAOU,KACnB,oFACA,6BACA,6BACA,6BACA,6BACA,uBACIJ,KAAMK,EAAKC,YACXb,UAAU,kBACVQ,OAAO,SACPC,IAAI,uBAJR,oB,kCCNG,aACX,OACI,yBAAKT,UAAWC,IAAOa,MACnB,yBACId,UACIC,IAAOc,cAAgB,mCAG3B,yBAAKC,IAAKC,IAAMjB,UAAWC,IAAOgB,QAEtC,+DACA,yFAEI,6BACA,6BACA,8BAEJ,yBAAKjB,UAAWC,IAAOiB,SACnB,kBAAC,IAAD,CAAMlB,UAAU,4BAA4BG,GAAG,QAA/C,YAGA,kBAAC,IAAD,CAAMH,UAAU,4BAA4BG,GAAG,aAA/C,eCADgB,MAnBf,WACI,OACI,kBAAC,IAAD,KACI,yBAAKnB,UAAU,OACX,kBAACoB,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,OAAOC,UAAWE,KAElC,yBAAKzB,UAAU,uBAAf,YAEI,0BAAMA,UAAU,8BAAhB,kBAFJ,qBCLI0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDoI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.df77a432.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1NL4P\",\"brand\":\"Navbar_brand__S57fh\",\"active\":\"Navbar_active__1JSni\",\"separator\":\"Navbar_separator__2obdG\",\"right\":\"Navbar_right__2MI9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__qtvp4\",\"logoContainer\":\"Home_logoContainer__WsobC\",\"logo\":\"Home_logo__2Nnqy\",\"App-logo-spin\":\"Home_App-logo-spin__1SMqc\",\"buttons\":\"Home_buttons__1GRPV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add\":\"Add_add__27Rr9\"};","module.exports = __webpack_public_path__ + \"static/media/logo.76351a31.png\";","import React from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport styles from \"./Navbar.module.scss\";\r\nimport data from \"../../data.json\";\r\n\r\nexport default () => {\r\n    const pathname = useLocation().pathname;\r\n\r\n    return (\r\n        <div className={styles.navbar}>\r\n            <Link\r\n                to=\"/\"\r\n                className={\r\n                    styles.brand + \" \" + (pathname === \"/\" ? styles.active : \"\")\r\n                }\r\n            >\r\n                Viav\r\n            </Link>\r\n            <Link\r\n                to=\"/features\"\r\n                className={pathname === \"/features\" ? styles.active : \"\"}\r\n            >\r\n                Features\r\n            </Link>\r\n            <Link\r\n                to=\"/add\"\r\n                className={pathname === \"/add\" ? styles.active : \"\"}\r\n            >\r\n                Add Viav\r\n            </Link>\r\n\r\n            <div className={styles.separator} />\r\n\r\n            <a\r\n                href=\"https://discord.gg/dd4pE7e\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className={styles.right}\r\n            >\r\n                Community\r\n            </a>\r\n            <a\r\n                href=\"https://patreon.com/brokenlamp\"\r\n                target=\"_blank\"\r\n                rel=\"noopener norefer\"\r\n                className={styles.right}\r\n            >\r\n                Donate\r\n            </a>\r\n            <a\r\n                href=\"https://github.com/BrokenLamp/viav\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className={styles.right}\r\n            >\r\n                GitHub\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Add.module.scss\";\r\nimport data from \"../data.json\";\r\n\r\nexport default () => {\r\n    return (\r\n        <div className={styles.add}>\r\n            <h3>The magic begins instantly. No configuration. No BS.</h3>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <a\r\n                href={data.invite_link}\r\n                className=\"morph small btn\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n            >\r\n                Add to Discord\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./Home.module.scss\";\r\nimport logo from \"../logo.png\";\r\nimport data from \"../data.json\";\r\n\r\nexport default () => {\r\n    return (\r\n        <div className={styles.home}>\r\n            <div\r\n                className={\r\n                    styles.logoContainer + \" morph inset App-logo-container\"\r\n                }\r\n            >\r\n                <img src={logo} className={styles.logo} />\r\n            </div>\r\n            <h2>Discord Infinite Voice Channels</h2>\r\n            <p>\r\n                Viav is an open source bot to change the way we use Discord\r\n                <br />\r\n                <br />\r\n                <br />\r\n            </p>\r\n            <div className={styles.buttons}>\r\n                <Link className=\"morph small btn hoverable\" to=\"/add\">\r\n                    Add Viav\r\n                </Link>\r\n                <Link className=\"morph small btn hoverable\" to=\"/features\">\r\n                    Features\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\n\r\nimport Add from \"./pages/Add\";\r\nimport Home from \"./pages/Home\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Navbar />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route path=\"/add\" component={Add} />\r\n                </Switch>\r\n                <div className=\"App-made-with-heart\">\r\n                    Made with\r\n                    <span className=\"App-made-with-heart__heart\"> ♥️ </span>\r\n                    by Broken Lamp\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./neumorphism.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}